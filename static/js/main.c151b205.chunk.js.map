{"version":3,"sources":["components/Navbar.tsx","Candidate.tsx","components/Scheduled.tsx","components/UnScheduled.tsx","pages/ListContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","fontSize","Typography","variant","noWrap","target","href","style","Candidates","maxWidth","background","paper","inline","pos","marginBottom","Scheduled","userData","setstate","useState","Date","selectedDate","handleDateChange","React","open","setOpen","openSnack","setOpenSnack","handleClose","handleCloseSnack","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","Fragment","size","onClick","Card","CardContent","component","gutterBottom","Qualification","CardActions","utils","DateFnsUtils","DateTimePicker","disablePast","value","onChange","Button","Dialog","DialogTitle","cursor","id","DialogContent","DialogContentText","DialogActions","autoFocus","temp","arr","i","length","localStorage","getItem","JSON","parse","push","setItem","stringify","prev","margin","textTransform","UnScheduled","moment","format","marginTop","text","secondary","heading","typography","pxToRem","fontWeight","fontWeightRegular","listContainer","overflowY","grey","nested","ListContainer","Container","Grid","container","xs","item","textAlign","map","el","flag","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c151b205.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, alpha, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport AccessAlarmsSharpIcon from '@material-ui/icons/AccessAlarmsSharp';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block',\r\n            },\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n            },\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(1),\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '12ch',\r\n                '&:focus': {\r\n                    width: '20ch',\r\n                },\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SearchAppBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <AccessAlarmsSharpIcon fontSize='large' />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Interview Scheduler\r\n                    </Typography>\r\n                    <a target='_blank' href='https://www.linkedin.com/in/gauravkumar0130'>\r\n                        <IconButton>\r\n                            <LinkedInIcon style={{ color: 'white' }} />\r\n                        </IconButton>\r\n                    </a>\r\n                    <a target='_blank' href='https://github.com/gaurav01k3'>\r\n                        <IconButton>\r\n                            <GitHubIcon style={{ color: 'white' }} />\r\n                        </IconButton>\r\n                    </a>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","export let Candidates = [\n    {\n        \"Candidate Name\": \"Ailis\",\n        \"Qualification\": \"Tbilisi Teaching University\",\n        \"Years of Experience\": 51,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Betsey\",\n        \"Qualification\": \"Newports Institute of Communication & Economics\",\n        \"Years of Experience\": 41,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Major\",\n        \"Qualification\": \"Kushiro Public University of Economics\",\n        \"Years of Experience\": 65,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Penny\",\n        \"Qualification\": \"Universitas Ibn Chaldun Jakarta\",\n        \"Years of Experience\": 62,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Joan\",\n        \"Qualification\": \"Southern Yangtze University\",\n        \"Years of Experience\": 1,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Hadria\",\n        \"Qualification\": \"Rhodes College\",\n        \"Years of Experience\": 42,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Rodd\",\n        \"Qualification\": \"Swiss Management Center\",\n        \"Years of Experience\": 59,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Garald\",\n        \"Qualification\": \"Mahatma Gandhi University Meghalaya \",\n        \"Years of Experience\": 9,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Eddi\",\n        \"Qualification\": \"Universidad de Puerto Rico, Carolina\",\n        \"Years of Experience\": 76,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Corney\",\n        \"Qualification\": \"California State University, San Marcos\",\n        \"Years of Experience\": 48,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Stevie\",\n        \"Qualification\": \"Mendeleev Russian University of Chemical Technology\",\n        \"Years of Experience\": 4,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Rori\",\n        \"Qualification\": \"University of the Thai Chamber of Commerce\",\n        \"Years of Experience\": 17,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Gerry\",\n        \"Qualification\": \"Diyala University\",\n        \"Years of Experience\": 86,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Stacee\",\n        \"Qualification\": \"Universitas Dian Nuswantoro\",\n        \"Years of Experience\": 8,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Galina\",\n        \"Qualification\": \"Libera Università degli Studi di Scienze Umane e Tecnologiche\",\n        \"Years of Experience\": 50,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Klarrisa\",\n        \"Qualification\": \"University of Wroclaw\",\n        \"Years of Experience\": 4,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Torin\",\n        \"Qualification\": \"Wageningen University\",\n        \"Years of Experience\": 96,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Tanitansy\",\n        \"Qualification\": \"Institute of Management and Technical Studies \",\n        \"Years of Experience\": 9,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Kenton\",\n        \"Qualification\": \"Bournemouth University\",\n        \"Years of Experience\": 92,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Harmonia\",\n        \"Qualification\": \"Universitas Muhammadiyah Jember\",\n        \"Years of Experience\": 42,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Schuyler\",\n        \"Qualification\": \"Gazi University Ankara\",\n        \"Years of Experience\": 64,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Salomone\",\n        \"Qualification\": \"University of Pittsburgh at Bradford\",\n        \"Years of Experience\": 78,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Olivero\",\n        \"Qualification\": \"Academy of Economics \\\"Dimitur A. Tscenov\\\"\",\n        \"Years of Experience\": 88,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"George\",\n        \"Qualification\": \"University of Tampere\",\n        \"Years of Experience\": 56,\n        \"Scheduled interview date\": \"\"\n    },\n    {\n        \"Candidate Name\": \"Jaime\",\n        \"Qualification\": \"National Kaohsiung First University of Science and Technology\",\n        \"Years of Experience\": 54,\n        \"Scheduled interview date\": \"\"\n    }\n]\n","import React, { useState } from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, Card, CardActions, CardContent } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport {\r\n    DatePicker,\r\n    TimePicker,\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\r\nimport { Candidates } from '../Candidate';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            maxWidth: '36ch',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        inline: {\r\n            display: 'inline',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n    }),\r\n);\r\n\r\ninterface ListCardProps {\r\n    userData: any;\r\n    setstate: any;\r\n}\r\n\r\nconst Scheduled: React.FC<ListCardProps> = ({ userData, setstate }) => {\r\n\r\n    const classes = useStyles();\r\n    const [selectedDate, handleDateChange] = useState<any>(new Date());\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openSnack, setOpenSnack] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const handleClick = () => {\r\n        setOpenSnack(true);\r\n    };\r\n\r\n    const handleCloseSnack = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenSnack(false);\r\n    };\r\n\r\n    const handleSchedule = () => {\r\n        let arr = [];\r\n        let temp: any;\r\n        for (let i = 0; i < Candidates.length; i++) {\r\n            if (Candidates[i] === userData) {\r\n                Candidates[i]['Scheduled interview date'] = selectedDate;\r\n                temp = localStorage.getItem('Candidates')!;\r\n                temp = JSON.parse(temp);\r\n                // arr = JSON.parse(temp)\r\n                if (!temp) {\r\n                    arr.push(Candidates[i])\r\n                    localStorage.setItem('Candidates', JSON.stringify(arr));\r\n                }\r\n                else {\r\n                    temp.push(Candidates[i])\r\n                    localStorage.setItem('Candidates', JSON.stringify(temp));\r\n                }\r\n            }\r\n        }\r\n        handleClose();\r\n        handleClick();\r\n        setstate(((prev: any) => {\r\n            if (prev)\r\n                return false;\r\n            else\r\n                return true\r\n        }));\r\n    }\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={openSnack}\r\n                autoHideDuration={3000}\r\n                onClose={handleCloseSnack}\r\n                message=\"Interview Scheduled\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnack}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n            <Card style={{ marginBottom: 10, position: 'relative' }}>\r\n                <CardContent style={{ padding: '10px 0 10px 15px' }}>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {userData['Candidate Name']}\r\n                    </Typography>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        {userData.Qualification}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                        Years of Experience: {userData['Years of Experience']}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions style={{ padding: '10px 0 10px 15px' }}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <DateTimePicker disablePast value={selectedDate} onChange={handleDateChange} />\r\n                    </MuiPickersUtilsProvider>\r\n                    <Button onClick={handleClickOpen} variant=\"contained\" color=\"primary\">Schedule</Button>\r\n                    <Dialog\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                    // PaperComponent={PaperComponent}\r\n                    // aria-labelledby=\"draggable-dialog-title\"\r\n                    >\r\n                        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                            Scheduling an Interview\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Are you sure want to schedule an interview?\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={handleSchedule} color=\"primary\">\r\n                                Schedule\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </CardActions>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Scheduled","import React, { useState } from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, Card, CardContent } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport {\r\n    DatePicker,\r\n    TimePicker,\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            maxWidth: '36ch',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        inline: {\r\n            display: 'inline',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n            textTransform: 'capitalize'\r\n        },\r\n    }),\r\n);\r\n\r\ninterface ListCardProps {\r\n    userData: any;\r\n}\r\n\r\nconst UnScheduled: React.FC<ListCardProps> = ({ userData }) => {\r\n\r\n    const classes = useStyles();\r\n    const [selectedDate, handleDateChange] = useState<any>(new Date());\r\n\r\n    return (\r\n        <Card style={{ marginBottom: 10, position: 'relative' }}>\r\n            <CardContent style={{ padding: '10px 0 10px 15px' }}>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {userData['Candidate Name']}\r\n                </Typography>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    {userData.Qualification}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    Years of Experience: {userData['Years of Experience']}\r\n                </Typography>\r\n                <Button variant=\"outlined\" color=\"primary\" size=\"medium\" className={classes.margin}>\r\n                    Interview Scheduled at : {moment(userData['Scheduled interview date']).format('YYYY - MM - DD HH:mm:ss')}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default UnScheduled","import React, { useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container, Typography, Button, } from '@material-ui/core';\r\nimport { Candidates } from '../Candidate';\r\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport {\r\n    DatePicker,\r\n    TimePicker,\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport Scheduled from '../components/Scheduled';\r\nimport UnScheduled from '../components/UnScheduled';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            // flexGrow: 1,\r\n            marginTop: 15\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            // textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n        listContainer: {\r\n            height: '80vh',\r\n            overflowY: 'auto',\r\n            // border: '1px solid gray',\r\n            backgroundColor: theme.palette.grey[200],\r\n            position: 'relative',\r\n            justifyContent: 'center',\r\n\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing(4),\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function ListContainer() {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(true);\r\n    const [state, setstate] = useState(false);\r\n\r\n    let temp: any;\r\n    temp = localStorage.getItem('Candidates')!;\r\n    temp = JSON.parse(temp);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth='md' className={classes.root}>\r\n                <Grid container spacing={5}>\r\n                    <Grid xs={6} item>\r\n                        <Button variant=\"outlined\">Scheduled</Button>\r\n                    </Grid>\r\n                    <Grid xs={6} item>\r\n                        <Button variant=\"outlined\">Un-Scheduled</Button>\r\n                    </Grid>\r\n                </Grid >\r\n            </Container >\r\n            <Container maxWidth='md' className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                    <Grid container spacing={3} item xs={6} className={classes.listContainer}>\r\n                        <Grid item xs={12} style={{ textAlign: 'start' }}>\r\n\r\n                            {!temp ? (Candidates.map((el: any) => {\r\n                                if (!el['Scheduled interview date'])\r\n                                    return <Scheduled userData={el} setstate={setstate} />\r\n                                else\r\n                                    return null\r\n                            })) : (Candidates.map((el: any) => {\r\n                                let flag = 0;\r\n                                for (let i = 0; i < temp.length; i++) {\r\n                                    if (el['Candidate Name'] === temp[i]['Candidate Name'])\r\n                                        flag = 1;\r\n                                }\r\n                                if (!flag)\r\n                                    return <Scheduled userData={el} setstate={setstate} />\r\n                                else\r\n                                    return null\r\n                            }))\r\n                            }\r\n\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={3} item xs={6} className={classes.listContainer}>\r\n                        <Grid item xs={12} style={{ textAlign: 'start' }}>\r\n                            {!temp &&\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    No interviews scheduled yet!\r\n                                </Typography>\r\n                            }\r\n                            {temp?.map((el: any) => {\r\n                                return <UnScheduled userData={el} />\r\n                            })}\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid >\r\n            </Container >\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport List from './pages/ListContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}